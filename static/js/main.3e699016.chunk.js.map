{"version":3,"sources":["App.js","index.js"],"names":["Header","props","className","MainContent","Calculator","vehicleChoices","selectOptionsList","i","length","push","value","label","toString","id","options","AppFooter","currentYear","App","name","Date","getFullYear","ReactDOM","render","document","getElementById"],"mappings":"iOAaA,SAASA,EAAOC,GACZ,OACI,wBAAQC,UAAU,aAAlB,SACI,4CAcZ,SAASC,EAAYF,GACjB,OACI,sBAAKC,UAAU,eAAf,UAEI,0CAEA,cAACE,EAAD,OAkBZ,IAVA,IAAIC,EAAiB,CACjB,cACA,iBACA,gBACA,cAIAC,EAAoB,GAEhBC,EAAI,EAAGA,EAAIF,EAAeG,OAAQD,IACtCD,EAAkBG,KACd,CACIC,MAAOL,EAAeE,GACtBI,MAAON,EAAeE,GAAGK,aA2CrC,SAASR,EAAWH,GAChB,OACI,sBAAKC,UAAU,aAAf,UACI,uDACA,sBAAMW,GAAG,eAAT,SAOI,cAAC,IAAD,CAAQC,QAASR,SA0BjC,SAASS,EAAUd,GACf,OACI,qBAAKC,UAAU,aAAf,SACI,iDAAoBD,EAAMe,YAA1B,SAqBGC,MAff,WACI,OACI,sBAAKf,UAAU,MAAf,UAEI,cAACF,EAAD,IAGA,cAACG,EAAD,CAAae,KAAK,IAAIb,eAAgBA,IAEtC,cAACU,EAAD,CAAWC,aAAa,IAAIG,MAAOC,oBCtJ/CC,IAASC,OAEL,cAAC,EAAD,IAEAC,SAASC,eAAe,W","file":"static/js/main.3e699016.chunk.js","sourcesContent":["import './App.css';\nimport Select from 'react-select';\nimport Button from 'react-bootstrap/Button';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\n\n\n\n/* #################################\n   ######## Header Content #########\n   #################################\n*/\nfunction Header(props) {\n    return ( \n        <header className=\"App-header\">\n            <div>Top Bar</div>\n        </header>\n    )\n}\n\n\n\n\n\n\n/* #################################\n   ####### Main App Content ########\n   #################################\n*/\nfunction MainContent(props){\n    return(\n        <div className=\"Main-Content\">\n\n            <div>Content</div>\n            {/* <h2>  {props.name} </h2> */}\n            <Calculator/>\n\n        </div>\n\n        \n    )\n}\n\nvar vehicleChoices = [\n    \"Audi E-tron\",\n    \"Chevrolet Bolt\",\n    \"Tesla Model S\",\n    \"Rivian R1T\"\n];\n\n// Used manufacturer ID to get models list\nvar selectOptionsList = [];\n\nfor(var i = 0; i < vehicleChoices.length; i++){\n    selectOptionsList.push(\n        {\n            value: vehicleChoices[i],\n            label: vehicleChoices[i].toString()\n        }\n    )\n}\n\n\nasync function getData(url) {\n    try{\n        \n        // let response = await fetch(\"https://vpic.nhtsa.dot.gov/api/vehicles/GetModelsForMakeId/440?format=json\");\n        let response = await fetch(url);\n        \n        if (!response.ok) {\n            let message = `An error has occured: ${response.status}`;\n            throw new Error(message);\n        }\n        console.log(\"response: \", response)\n        let json = await response.json();\n    }\n    catch(error){\n        if(error.toString().includes(\"Failed to fetch\"))\n            // alert(\"Failed to receive a response from the the database.\")\n        console.log(\"ERROR: \", error);\n    }\n    // How to get EV data? Can't request from NHTSA bc no filter, may have to hardcode it? \n}\n\n\n\n// getData(\"https://vpic.nhtsa.dot.gov/api/vehicles?format=json\")\n\n// Get the model ID for all vehicle models inside the database.\n// For each model ID, get its engine type.\n// Keep the list of the models that have \"ENGINE\" : \"ELECTRIC\", or whatever it is.\n// and from there, figure shit out.\n\n\n\n/* #################################\n   ####### Functional Content #######\n   #################################\n*/\n\nfunction Calculator(props) {\n    return(\n        <div className=\"Calculator\">\n            <h2>  Select your vehicle</h2>\n            <form id=\"main-choices\">\n\n                {/* This works */}\n                {/* <ul>    {props.vehicleChoices.map((vehicle) => <li>{vehicle}</li>)}     </ul> */}\n                \n                {/* {props.vehicleChoices.map( (vehicle) => <p>{vehicle}</p> )} */}\n                {/* <Select options={props.vehicleChoices.map( (vehicle) => console.log(vehicle) )}/> */}\n                <Select options={selectOptionsList}/>\n                {/* <Select options={props.vehicleChoices}/> */}\n\n                {/* <Button variant=\"dark\" >Generate report</Button>{' '} */}\n\n\n                {/* <button type=\"button\">Click Me!</button>   */}\n            </form>\n\n        </div>\n    )\n}\n\n\n\n\n\n\n\n\n\n\n/* #################################\n   ######## Footer Content #########\n   #################################\n*/\nfunction AppFooter(props){\n    return(\n        <div className=\"App-Footer\" >\n            <footer> Copyright {props.currentYear} </footer> \n        </div>\n    )\n}\n\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            \n            <Header />\n\n            {/* Only Strings are in \"\", all other vars must be inside curlybrackets */}\n            <MainContent name=\".\" vehicleChoices={vehicleChoices}/>\n\n            <AppFooter currentYear={new Date().getFullYear()} />\n        \n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n\n    <App /> ,\n\n    document.getElementById('root')\n\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}