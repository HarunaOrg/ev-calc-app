{"version":3,"sources":["App.js","index.js"],"names":["Header","props","className","MainContent","Calculator","name","vehicleChoices","url","a","fetch","response","ok","message","status","Error","json","toString","includes","console","log","getData","optionsMaker","arr","optionsList","i","length","push","value","label","stateOptionsMaker","substr","statesList","id","options","Button","variant","size","onClick","alert","AppFooter","currentYear","App","Date","getFullYear","ReactDOM","render","document","getElementById"],"mappings":"0PASA,SAASA,EAAOC,GACd,OACE,wBAAQC,UAAU,aAAlB,SACE,4CASN,SAASC,EAAYF,GACnB,OACE,sBAAKC,UAAU,eAAf,UACE,0CAEA,cAACE,EAAD,CAAYC,KAAK,IAAIC,eAAgBA,O,4CAK3C,WAAuBC,GAAvB,iBAAAC,EAAA,+EAGyBC,MAAMF,GAH/B,WAGQG,EAHR,QAKkBC,GALlB,sBAMUC,EANV,gCAM6CF,EAASG,QAC1C,IAAIC,MAAMF,GAPtB,uBAUqBF,EAASK,OAV9B,gEAcQ,KAAMC,WAAWC,SAAS,oBAE5BC,QAAQC,IAAI,UAAZ,MAhBN,2D,2DA8CAC,CACE,sGAQF,IAAId,EAAiB,CACnB,cACA,iBACA,gBACA,cAGEe,EAAe,SAAUC,GAE3B,IADA,IAAIC,EAAc,GACTC,EAAI,EAAGA,EAAIF,EAAIG,OAAQD,IAC9BD,EAAYG,KAAK,CACfC,MAAOL,EAAIE,GACXI,MAAON,EAAIE,GAAGR,aAGlB,OAAOO,GAGLM,EAAoB,SAAUP,GAEhC,IADA,IAAIC,EAAc,GACTC,EAAI,EAAGA,EAAIF,EAAIG,OAAQD,IAC9BD,EAAYG,KAAK,CACfC,MAAOL,EAAIE,GAAGM,OAAO,EAAG,GACxBF,MAAON,EAAIE,GAAGM,OAAO,EAAGR,EAAIE,GAAGC,UAGnC,OAAOF,GAGLQ,EAAa,CACf,cACA,eACA,gBACA,sBACA,eACA,kBACA,gBACA,mBACA,4BACA,gBACA,eACA,eACA,YACA,cACA,YACA,aACA,gBACA,eACA,cACA,gBACA,iBACA,qBACA,gBACA,aACA,gBACA,iBACA,gBACA,mBACA,eACA,sBACA,oBACA,gBACA,qBACA,kBACA,kBACA,cACA,gBACA,YACA,gBACA,cACA,oBACA,mBACA,oBACA,sBACA,oBACA,iBACA,aACA,YACA,gBACA,sBACA,eACA,kBACA,iBACA,qBACA,gBAOF,SAAS3B,EAAWH,GAClB,OACE,qBAAKC,UAAU,aAAf,SACE,uBAAM8B,GAAG,eAAT,UAIE,sDACA,cAAC,IAAD,CAAQC,QAASZ,EAAaf,KAC9B,uBACA,uBACA,oDACA,cAAC,IAAD,CAAQ2B,QAASJ,EAAkBE,KAEnC,cAACG,EAAA,EAAD,CACEC,QAAQ,OACRC,KAAK,KACLC,QAAS,kBAAMC,MAAM,kCAHvB,6BAMU,SAUlB,SAASC,EAAUtC,GACjB,OACE,qBAAKC,UAAU,aAAf,SACE,iDAAoBD,EAAMuC,YAA1B,SAgBSC,MAXf,WACE,OACE,sBAAKvC,UAAU,MAAf,UACE,6CACA,cAACF,EAAD,IACA,cAACG,EAAD,IACA,cAACoC,EAAD,CAAWC,aAAa,IAAIE,MAAOC,oBCvNzCC,IAASC,OAEL,cAAC,EAAD,IAEAC,SAASC,eAAe,W","file":"static/js/main.98c9bf9a.chunk.js","sourcesContent":["import './App.css';\nimport Select from 'react-select';\nimport Button from 'react-bootstrap/Button';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n/* #################################\n   ######## Header Content #########\n   #################################\n*/\nfunction Header(props) {\n  return (\n    <header className=\"App-header\">\n      <div>Top Bar</div>\n    </header>\n  );\n}\n\n/* #################################\n   ####### Main App Content ########\n   #################################\n*/\nfunction MainContent(props) {\n  return (\n    <div className=\"Main-Content\">\n      <div>Content</div>\n      {/* <h2>  {props.name} </h2> */}\n      <Calculator name=\".\" vehicleChoices={vehicleChoices} />\n    </div>\n  );\n}\n\nasync function getData(url) {\n  try {\n    // let response = await fetch(\"https://vpic.nhtsa.dot.gov/api/vehicles/GetModelsForMakeId/440?format=json\");\n    let response = await fetch(url);\n\n    if (!response.ok) {\n      let message = `An error has occured: ${response.status}`;\n      throw new Error(message);\n    }\n    // console.log(\"RESPONSE: \", response);\n    let json = await response.json();\n\n    // console.log(\"JSON result: \", json);\n  } catch (error) {\n    if (error.toString().includes('Failed to fetch'))\n      // alert(\"Failed to receive a response from the the database.\")\n      console.log('ERROR: ', error);\n  }\n  // How to get EV data? Can't request from NHTSA bc no filter, may have to hardcode it?\n}\n\n// First, get the vehicle model, and the location of user (State)\n\n/*\n\nPull State Data from\n    All fuels: http://api.eia.gov/series/?api_key=YOUR_API_KEY_HERE&series_id=ELEC.GEN.ALL-US-1.A\n    Coal Annually: http://api.eia.gov/series/?api_key=YOUR_API_KEY_HERE&series_id=ELEC.GEN.COW-US-1.A\n    Liquid Petroleum: http://api.eia.gov/series/?api_key=YOUR_API_KEY_HERE&series_id=ELEC.GEN.PEL-US-1.A\n    Petcoke: http://api.eia.gov/series/?api_key=YOUR_API_KEY_HERE&series_id=ELEC.GEN.PC-US-1.A\n    Natural gas: http://api.eia.gov/series/?api_key=YOUR_API_KEY_HERE&series_id=ELEC.GEN.NG-US-1.A\n    Nuclear: http://api.eia.gov/series/?api_key=YOUR_API_KEY_HERE&series_id=ELEC.GEN.NUC-US-1.A\n    Convent. hydro: http://api.eia.gov/series/?api_key=YOUR_API_KEY_HERE&series_id=ELEC.GEN.HYC-US-1.A\n    Other renewables: http://api.eia.gov/series/?api_key=YOUR_API_KEY_HERE&series_id=ELEC.GEN.AOR-US-1.A\n    Pump hydro (neg): http://api.eia.gov/series/?api_key=YOUR_API_KEY_HERE&series_id=ELEC.GEN.HPS-US-1.A\n    Other: http://api.eia.gov/series/?api_key=YOUR_API_KEY_HERE&series_id=ELEC.GEN.OTH-US-1.A\n\n\n    // Compare to total number and get vals\n\n\n\n\n\n*/\n\ngetData(\n  'https://api.eia.gov/series/?api_key=df1c2e896a9338ec18c65bf62aa77132&series_id=ELEC.PRICE.NM-RES.M'\n);\n\n/* #################################\n   ####### Functional Content #######\n   #################################\n*/\n\nvar vehicleChoices = [\n  'Audi E-tron',\n  'Chevrolet Bolt',\n  'Tesla Model S',\n  'Rivian R1T',\n];\n\nvar optionsMaker = function (arr) {\n  var optionsList = [];\n  for (var i = 0; i < arr.length; i++) {\n    optionsList.push({\n      value: arr[i],\n      label: arr[i].toString(),\n    });\n  }\n  return optionsList;\n};\n\nvar stateOptionsMaker = function (arr) {\n  var optionsList = [];\n  for (var i = 0; i < arr.length; i++) {\n    optionsList.push({\n      value: arr[i].substr(0, 2),\n      label: arr[i].substr(5, arr[i].length),\n    });\n  }\n  return optionsList;\n};\n\nvar statesList = [\n  'AK - Alaska',\n  'AL - Alabama',\n  'AR - Arkansas',\n  'AS - American Samoa',\n  'AZ - Arizona',\n  'CA - California',\n  'CO - Colorado',\n  'CT - Connecticut',\n  'DC - District of Columbia',\n  'DE - Delaware',\n  'FL - Florida',\n  'GA - Georgia',\n  'GU - Guam',\n  'HI - Hawaii',\n  'IA - Iowa',\n  'ID - Idaho',\n  'IL - Illinois',\n  'IN - Indiana',\n  'KS - Kansas',\n  'KY - Kentucky',\n  'LA - Louisiana',\n  'MA - Massachusetts',\n  'MD - Maryland',\n  'ME - Maine',\n  'MI - Michigan',\n  'MN - Minnesota',\n  'MO - Missouri',\n  'MS - Mississippi',\n  'MT - Montana',\n  'NC - North Carolina',\n  'ND - North Dakota',\n  'NE - Nebraska',\n  'NH - New Hampshire',\n  'NJ - New Jersey',\n  'NM - New Mexico',\n  'NV - Nevada',\n  'NY - New York',\n  'OH - Ohio',\n  'OK - Oklahoma',\n  'OR - Oregon',\n  'PA - Pennsylvania',\n  'PR - Puerto Rico',\n  'RI - Rhode Island',\n  'SC - South Carolina',\n  'SD - South Dakota',\n  'TN - Tennessee',\n  'TX - Texas',\n  'UT - Utah',\n  'VA - Virginia',\n  'VI - Virgin Islands',\n  'VT - Vermont',\n  'WA - Washington',\n  'WI - Wisconsin',\n  'WV - West Virginia',\n  'WY - Wyoming',\n];\n\nlet x = function () {\n  alert('hey dude');\n};\n\nfunction Calculator(props) {\n  return (\n    <div className=\"Calculator\">\n      <form id=\"main-choices\">\n        {/* This works */}\n        {/* <ul>    {props.vehicleChoices.map((vehicle) => <li>{vehicle}</li>)}     </ul> */}\n        {/* <Select options={props.vehicleChoices.map( (vehicle) => console.log(vehicle) )}/> */}\n        <h4> Select your vehicle</h4>\n        <Select options={optionsMaker(vehicleChoices)} />\n        <br />\n        <br />\n        <h4> Select your state</h4>\n        <Select options={stateOptionsMaker(statesList)} />\n        {/* Won't accept just alert(), have to wrap it in an anonymous function */}\n        <Button\n          variant=\"dark\"\n          size=\"lg\"\n          onClick={() => alert('Hey buddy, onClick is working')}\n        >\n          Generate report\n        </Button>{' '}\n      </form>\n    </div>\n  );\n}\n\n/* #################################\n   ######## Footer Content #########\n   #################################\n*/\nfunction AppFooter(props) {\n  return (\n    <div className=\"App-Footer\">\n      <footer> Copyright {props.currentYear} </footer>\n    </div>\n  );\n}\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h1>Hello World</h1>\n      <Header />\n      <MainContent />\n      <AppFooter currentYear={new Date().getFullYear()} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n\n    <App /> ,\n\n    document.getElementById('root')\n\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}